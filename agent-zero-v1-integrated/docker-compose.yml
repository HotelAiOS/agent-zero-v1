version: '3.8'

services:
  agent-zero-integrated:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - NEO4J_URL=bolt://neo4j:7687
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - OLLAMA_URL=http://host.docker.internal:11434
    depends_on:
      - neo4j
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - agent-zero-network

  neo4j:
    image: neo4j:5.11
    environment:
      NEO4J_AUTH: neo4j/agent-zero-pass
      NEO4J_dbms_security_procedures_unrestricted: "gds.*,apoc.*"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - agent-zero-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "agent-zero-pass", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agent-zero-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: agent
      RABBITMQ_DEFAULT_PASS: zero-pass
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - agent-zero-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  neo4j_data:
  redis_data:
  rabbitmq_data:

networks:
  agent-zero-network:
    driver: bridge
